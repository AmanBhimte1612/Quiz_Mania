
import sqlite3
from random import shuffle
connection = sqlite3.connect('manager.db')

def insert_questions():
    # """ In this function there are Sample questions for inserting in the database and after inserting please comment the inserted questions to avoid repeataion
    
    # """
    # questions = [
    # ("What is the output of 2 + 2?", "3", "4", "5", "6", "4"),
    # ("Which of the following is an invalid variable name in Python?", "my_var", "my-var", "_myvar", "myvar2", "my-var"),
    # ("What will be the output of 'hello'*3?", "hellohellohello", "hello hello hello", "hello3", "Error", "hellohellohello"),
    # ("What is the correct syntax to declare a function in Python?", "func my_function():", "def my_function():", "define my_function():", "function my_function():", "def my_function():"),
    # ("What does the function len() do?", "Returns the length of a string", "Returns the absolute value of a number", "Returns the maximum value in a list", "Returns the sum of all elements in a list", "Returns the length of a string"),
    # ("Which of the following is a mutable data type in Python?", "Tuple", "List", "String", "Set", "List"),
    # ("What does the expression 3 == 3 evaluate to?", "True", "False", "None", "Error", "True"),
    # ("What is the output of the code: print(2 * '2')?", "22", "4", "222", "Error", "22"),
    # ("What is the result of 'hello'.upper() in Python?", "hello", "HELLO", "Hello", "Error", "HELLO"),
    # ("Which keyword is used for function return in Python?", "return", "returns", "ret", "back", "return"),
    # ("What is the correct way to comment multiple lines in Python?", "# This is a comment", "// This is a comment", "/* This is a comment */", "''' This is a comment '''", "''' This is a comment '''"),
    # ("What is the output of 2 ** 3?", "8", "6", "5", "2", "8"),
    # ("What is the value of the expression 'hello' + 'world'?", "helloworld", "hello world", "hello+world", "Error", "helloworld"),
    # ("What is the output of the code: print('hello'.find('e'))?", "2", "1", "-1", "Error", "1"),
    # ("Which of the following is a correct way to create an empty list in Python?", "list = {}", "list = []", "list = [0]", "list = [None]", "list = []"),
    # ("What is the correct way to create a tuple with a single element in Python?", "(1)", "(1,)", "(1:)", "1", "(1,)"),
    # ("Which function is used to take input from the user in Python?", "input()", "get_input()", "user_input()", "read_input()", "input()"),
    # ("What will be the output of 10 / 3 in Python 3.x?", "3.333", "3", "3.0", "Error", "3.333"),
    # ("What is the output of the code: print('hello'[::-1])?", "hello", "olleh", "Error", "oh", "olleh"),
    # ("What is the output of the code: print(9 % 4)?", "2", "3", "1", "0", "1"),
    # ("What is the correct syntax to access the value of key 'key1' from dictionary 'my_dict'?", "my_dict(key1)", "my_dict[key1]", "my_dict.key1", "my_dict['key1']", "my_dict['key1']"),
    # ("Which of the following is used to define a block of code in Python?", "Brackets {}", "Parentheses ()", "Indentation", "Semicolons ;", "Indentation"),
    # ("What is the output of the code: print(2 == 3)?", "True", "False", "None", "Error", "False"),
    # ("What is the output of the code: print('python'.capitalize())?", "Python", "PYTHON", "python", "Error", "Python"),
    # ("What does the 'pass' statement do in Python?", "Exits the loop", "Does nothing", "Raises an exception", "Prints a message", "Does nothing"),
    # ("Which of the following is not a valid data type in Python?", "Float", "Integer", "Character", "Boolean", "Character"),
    # ("What is the result of 'hello'.replace('l', 'w')?", "hewwo", "hewo", "hello", "Error", "hewwo"),
    # ("What is the output of the code: print(10 // 3)?", "3", "3.333", "3.0", "Error", "3"),
    # ("What is the correct way to check if a key exists in a dictionary in Python?", "'key' in my_dict", "my_dict.has_key('key')","my_dict.contains('key')", "key_exists('key')", "'key' in my_dict"),
    # ("What does the 'break' statement do in Python?", "Exits the loop", "Continues to the next iteration of the loop", "Prints a message", "None of the above", "Exits the loop"),
    # ("What is the output of the code: print('python'[1:4])?", "pyt", "yth", "thon", "py", "yth"),
    # ("Which of the following is not a valid variable type in Python?", "Int", "Str", "List", "Dict", "Int"),
    # ("What does the 'continue' statement do in Python?", "Exits the loop", "Continues to the next iteration of the loop", "Prints a message", "None of the above", "Continues to the next iteration of the loop"),
    # ("What is the output of the code: print(2 != 3)?", "True", "False", "None", "Error", "True"),
    # ("What is the result of 'hello'.split('l')?", "['he', '', 'o']", "['h', 'e', 'l', 'l', 'o']", "['h', 'e', 'llo']", "Error", "['he', '', 'o']"),
    # ("What is the output of the code: print(2 ** 0.5)?", "4", "2", "1", "Error", "1.4142135623730951"),
    # ("What does the 'del' statement do in Python?", "Deletes a variable", "Deletes a file", "Deletes a function", "None of the above", "Deletes a variable"),
    # ("Which of the following statements is used to declare a list in Python?", "list my_list = []", "List my_list = {}", "my_list = list()", "my_list = []", "my_list = []"),
    # ("What is the output of the code: print(len('python'))?", "7", "6", "5", "Error", "6"),
    # ("What does the 'reverse' method do in Python?", "Reverses the order of elements in a list", "Reverses the order of characters in a string", "Reverses the order of keys in a dictionary", "None of the above", "Reverses the order of elements in a list"),
    # ("What is the result of 'hello'.count('l')?", "1", "2", "3", "Error", "2"),
    # ("What is the output of the code: print([1, 2, 3] + [4, 5])?", "[1, 2, 3, 4, 5]", "[1, 2, 3, [4, 5]]", "[1, 2, 3, 4, 5, []]", "Error", "[1, 2, 3, 4, 5]"),
    # ("What does the 'append' method do in Python lists?", "Adds a new item to the end of the list", "Removes the last item from the list", "Sorts the list in ascending order", "None of the above", "Adds a new item to the end of the list"),
    # ("What is the output of the code: print(10 > 9 and 10 < 11)?", "True", "False", "None", "Error", "True"),
    # ("What is the result of 'hello'.index('l')?", "2", "3", "4", "Error", "2"),
    # ("What is the output of the code: print('python'[::-1])?", "nohtyp", "p", "Error", "o", "nohtyp"),
    # ("What does the 'pop' method do in Python lists?", "Removes and returns the last item in the list", "Adds a new item to the end of the list", "Sorts the list in ascending order", "None of the above", "Removes and returns the last item in the list"),
    # ("What is the output of the code: print(not True)?", "True", "False", "None", "Error", "False"),
    # ("What is the result of 'hello'.upper().lower()?", "hello", "HELLO", "error", "HELLOHELLO", "hello"),
    # ("What is the output of the code: print([1, 2, 3] * 2)?", "[1, 2, 3, 1, 2, 3]", "[2, 4, 6]", "[1, 4, 9]", "Error", "[1, 2, 3, 1, 2, 3]"),
    # ('What is the output of print(2+3*4)', '14', '20', '24', '15', '20'),
    # ('Which of the following is not a keyword in Python?', 'break', 'except', 'case', 'pass', 'case'),
    # ('What is the output of print("Hello" + "World")?', 'Hello World', 'HelloWorld', 'Hello+World', 'Error', 'HelloWorld'),
    # ('Which of the following is an invalid variable name in Python?', '_var1', 'var_1', '1_var', 'var1', '1_var'),
    # ('What will be the output of the following code? \nprint("Python"[1:4])', 'yth', 'Pyt', 'ytho', 'thon', 'yth'),
    # ('Which one of these is floor division?', '//', '/', '%', '**', '//'),
    # ('What does the function len() do?', 'Returns the length of a string', 'Returns the type of the object', 'Returns the maximum value in a list', 'Returns the smallest value in a list', 'Returns the length of a string'),
    # ('What is the output of print(2**3)', '8', '6', '5', '16', '8'),
    # ('Which of the following is used to comment multiple lines in Python?', '/* */', '//', '/*', '*/', '/* */'),
    # ('What is the correct way to create an empty list in Python?', 'list()', 'list{}', 'list[]', '{}', 'list()'),
    # ('What is the output of the following code? \nprint(3==3.0)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which of the following is a mutable data type in Python?', 'List', 'Tuple', 'String', 'Dictionary', 'List'),
    # ('What is the output of print(3/2)', '1.5', '1', '2', '1.0', '1.5'),
    # ('What is the correct file extension for Python files?', '.py', '.pt', '.pyth', '.python', '.py'),
    # ('What is the output of print("Python"[::-1])?', 'nohtyP', 'Python', 'P', 'n', 'nohtyP'),
    # ('Which statement is used to exit from a loop in Python?', 'break', 'exit', 'return', 'continue', 'break'),
    # ('What is the output of the following code? \nprint(4%2)', '0', '1', '2', '4', '0'),
    # ('Which function is used to read a single character from the user in Python 3.x?', 'input()', 'raw_input()', 'get_input()', 'read_input()', 'input()'),
    # ('What will be the output of the following code? \nprint("hello" * 3)', 'hellohellohello', '3hello', 'hellohello', 'error', 'hellohellohello'),
    # ('What is the output of the following code? \nprint(5 > 3)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which of the following is the correct way to initialize an empty dictionary in Python?', '{}', 'dict()', 'dictionary()', '()', '{}'),
    # ('What is the output of the following code? \nprint(7//3)', '2', '2.33', '3', '2.0', '2'),
    # ('What does the 'in' operator do in Python?', 'Checks if a substring exists in a string', 'Checks if a value exists in a list', 'Checks if a key exists in a dictionary', 'All of the above', 'All of the above'),
    # ('What is the output of the following code? \nprint("Python"[0])', 'P', 'Py', 'p', 'None', 'P'),
    # ('Which of the following is a correct comment in Python?', '# This is a comment', '// This is a comment', '/ This is a comment', '-- This is a comment', '# This is a comment'),
    # ('What is the output of the following code? \nprint(10 != 10)', 'False', 'True', 'Error', 'None', 'False'),
    # ('Which of the following is not a standard data type in Python?', 'Double', 'Boolean', 'Integer', 'String', 'Double'),
    # ('What will be the output of the following code? \nprint(2 * 3 ** 3 * 4)', '216', '72', '120', 'Error', '216'),
    # ('What is the output of the following code? \nprint(9 > 7 and 10 < 12)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which of the following is a correct way to comment multiple lines in Python?', 'Using triple quotes', 'Using double quotes', 'Using single quotes', 'Using backslashes', 'Using triple quotes'),
    # ('What will be the output of the following code? \nprint("Hello"[::-1])', 'olleH', 'Hello', 'H', 'o', 'olleH'),
    # ("What does the 'not' operator do in Python?", 'Returns the logical opposite', 'Checks if a value is not None', 'Checks if a value is not empty', 'None of the above', 'Returns the logical opposite'),
    # ('Which of the following data types is immutable in Python?', 'Tuple', 'List', 'Dictionary', 'Set', 'Tuple'),
    # ('What is the output of print(9//2)', '4.5', '4', '5', 'Error', '4'),
    # ('What will be the output of the following code? \nprint(len("Python"))', '6', '7', '5', 'None', '6'),
    # ('What is the correct way to create a tuple with a single element in Python?', '(1)', '(1,)', '1,', '(1)', '(1,)'),
    # ('What is the output of print("Hello".upper())?', 'HELLO', 'Hello', 'hello', 'Error', 'HELLO'),
    # ('Which of the following is not a valid Python comment?', '/* This is a comment */', '# This is a comment', '// This is a comment', "''' This is a comment '''", '/* This is a comment */'),
    # ('What will be the output of the following code? \nprint(10 == 10.0)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which function is used to convert a string to a list in Python?', 'split()', 'join()', 'list()', 'convert()', 'split()'),
    # ('What is the output of the following code? \nprint(2 * 3 ** 3 + 4)', '82', '36', '40', 'Error', '82'),
    # ('What is the output of the following code? \nprint(10 > 9 or 20 < 15)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which of the following is used to define a block of code in Python?', 'Indentation', 'Brackets', 'Semicolons', 'Quotation marks', 'Indentation'),
    # ('What will be the output of the following code? \nprint("Hello" + 3)', 'Hello3', 'HelloHelloHello', 'Error', 'None', 'Error'),
    # ('Which of the following is not a valid Python variable name?', 'my-var', '_myvar', 'my_var', 'MYVAR', 'my-var'),
    # ('What is the output of the following code? \nprint(2 ** 3 ** 2)', '512', '64', '36', '12', '512'),
    # ('What is the output of the following code? \nprint("Python"[1:4:2])', 'yh', 'yo', 'to', 'th', 'yh'),
    # ('Which of the following is used to convert a string to lowercase in Python?', 'lower()', 'to_lower()', 'case_lower()', 'tolower()', 'lower()'),
    # ('What is the output of print(10 % 3)', '1', '3', '10', '0.333', '1'),
    # ('What will be the output of the following code? \nprint("Python".split())', '["Python"]', '"Python"', '("Python",)', '"Python"', '["Python"]'),
    # ('What is the output of the following code? \nprint(10 < 9)', 'False', 'True', 'Error', 'None', 'False'),
    # ('Which of the following is used to define a function in Python?', 'def', 'function', 'define', 'fn', 'def'),
    # ('What is the output of the following code? \nprint(not 2 > 3)', 'True', 'False', 'Error', 'None', 'True'),
    # ('What will be the output of the following code? \nprint("Hello" * 0)', '', 'Hello', '0', 'Error', ''),
    # ('Which of the following is not a correct way to represent comments in Python?', '// This is a comment', '# This is a comment', "''' This is a comment '''", '/* This is a comment */', '/* This is a comment */'),
    # ('What is the output of the following code? \nprint(2 + 3 * 4)', '14', '20', '24', '15', '14'),
    # ('What is the output of print(2+3*4)', '14', '20', '24', '15', '20'),
    # ('Which of the following is not a keyword in Python?', 'break', 'except', 'case', 'pass', 'case'),
    # ('What is the output of print("Hello" + "World")?', 'Hello World', 'HelloWorld', 'Hello+World', 'Error', 'HelloWorld'),
    # ('Which of the following is an invalid variable name in Python?', '_var1', 'var_1', '1_var', 'var1', '1_var'),
    # ('What will be the output of the following code? \nprint("Python"[1:4])', 'yth', 'Pyt', 'ytho', 'thon', 'yth'),
    # ('Which one of these is floor division?', '//', '/', '%', '**', '//'),
    # ('What does the function len() do?', 'Returns the length of a string', 'Returns the type of the object', 'Returns the maximum value in a list', 'Returns the smallest value in a list', 'Returns the length of a string'),
    # ('What is the output of print(2**3)', '8', '6', '5', '16', '8'),
    # ('Which of the following is used to comment multiple lines in Python?', '/* */', '//', '/*', '*/', '/* */'),
    # ('What is the correct way to create an empty list in Python?', 'list()', 'list{}', 'list[]', '{}', 'list()'),
    # ('What is the output of the following code? \nprint(3==3.0)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which of the following is a mutable data type in Python?', 'List', 'Tuple', 'String', 'Dictionary', 'List'),
    # ('What is the output of print(3/2)', '1.5', '1', '2', '1.0', '1.5'),
    # ('What is the correct file extension for Python files?', '.py', '.pt', '.pyth', '.python', '.py'),
    # ('What is the output of print("Python"[::-1])?', 'nohtyP', 'Python', 'P', 'n', 'nohtyP'),
    # ('Which statement is used to exit from a loop in Python?', 'break', 'exit', 'return', 'continue', 'break'),
    # ('What is the output of the following code? \nprint(4%2)', '0', '1', '2', '4', '0'),
    # ('Which function is used to read a single character from the user in Python 3.x?', 'input()', 'raw_input()', 'get_input()', 'read_input()', 'input()'),
    # ('What will be the output of the following code? \nprint("hello" * 3)', 'hellohellohello', '3hello', 'hellohello', 'error', 'hellohellohello'),
    # ('What is the output of the following code? \nprint(5 > 3)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which of the following is the correct way to initialize an empty dictionary in Python?', '{}', 'dict()', 'dictionary()', '()', '{}'),
    # ('What is the output of the following code? \nprint(7//3)', '2', '2.33', '3', '2.0', '2'),
    # ('What does the 'in' operator do in Python?', 'Checks if a substring exists in a string', 'Checks if a value exists in a list', 'Checks if a key exists in a dictionary', 'All of the above', 'All of the above'),
    # ('What is the output of the following code? \nprint("Python"[0])', 'P', 'Py', 'p', 'None', 'P'),
    # ('Which of the following is a correct comment in Python?', '# This is a comment', '// This is a comment', '/ This is a comment', '-- This is a comment', '# This is a comment'),
    # ('What is the output of the following code? \nprint(10 != 10)', 'False', 'True', 'Error', 'None', 'False'),
    # ('Which of the following is not a standard data type in Python?', 'Double', 'Boolean', 'Integer', 'String', 'Double'),
    # ('What will be the output of the following code? \nprint(2 * 3 ** 3 * 4)', '216', '72', '120', 'Error', '216'),
    # ('What is the output of the following code? \nprint(9 > 7 and 10 < 12)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which of the following is a correct way to comment multiple lines in Python?', 'Using triple quotes', 'Using double quotes', 'Using single quotes', 'Using backslashes', 'Using triple quotes'),
    # ('What will be the output of the following code? \nprint("Hello"[::-1])', 'olleH', 'Hello', 'H', 'o', 'olleH'),
    
    # ('Which of the following data types is immutable in Python?', 'Tuple', 'List', 'Dictionary', 'Set', 'Tuple'),
    # ('What is the output of print(9//2)', '4.5', '4', '5', 'Error', '4'),
    # ('What will be the output of the following code? \nprint(len("Python"))', '6', '7', '5', 'None', '6'),
    # ('What is the correct way to create a tuple with a single element in Python?', '(1)', '(1,)', '1,', '(1)', '(1,)'),
    # ('What is the output of print("Hello".upper())?', 'HELLO', 'Hello', 'hello', 'Error', 'HELLO'),
    # ('Which of the following is not a valid Python comment?', '/* This is a comment */', '# This is a comment', '// This is a comment', "''' This is a comment '''", '/* This is a comment */'),
    # ('What will be the output of the following code? \nprint(10 == 10.0)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which function is used to convert a string to a list in Python?', 'split()', 'join()', 'list()', 'convert()', 'split()'),
    # ('What is the output of the following code? \nprint(2 * 3 ** 3 + 4)', '82', '36', '40', 'Error', '82'),
    # ('What is the output of the following code? \nprint(10 > 9 or 20 < 15)', 'True', 'False', 'Error', 'None', 'True'),
    # ('Which of the following is used to define a block of code in Python?', 'Indentation', 'Brackets', 'Semicolons', 'Quotation marks', 'Indentation'),
    # ('What will be the output of the following code? \nprint("Hello" + 3)', 'Hello3', 'HelloHelloHello', 'Error', 'None', 'Error'),
    # ('Which of the following is not a valid Python variable name?', 'my-var', '_myvar', 'my_var', 'MYVAR', 'my-var'),
    # ('What is the output of the following code? \nprint(2 ** 3 ** 2)', '512', '64', '36', '12', '512'),
    # ('What is the output of the following code? \nprint("Python"[1:4:2])', 'yh', 'yo', 'to', 'th', 'yh'),
    # ('Which of the following is used to convert a string to lowercase in Python?', 'lower()', 'to_lower()', 'case_lower()', 'tolower()', 'lower()'),
    # ('What is the output of print(10 % 3)', '1', '3', '10', '0.333', '1'),
    # ('What will be the output of the following code? \nprint("Python".split())', '["Python"]', '"Python"', '("Python",)', '"Python"', '["Python"]'),
    # ('What is the output of the following code? \nprint(10 < 9)', 'False', 'True', 'Error', 'None', 'False'),
    # ('Which of the following is used to define a function in Python?', 'def', 'function', 'define', 'fn', 'def'),
    # ('What is the output of the following code? \nprint(not 2 > 3)', 'True', 'False', 'Error', 'None', 'True'),
    # ('What will be the output of the following code? \nprint("Hello" * 0)', '', 'Hello', '0', 'Error', ''),
    # ('Which of the following is not a correct way to represent comments in Python?', '// This is a comment', '# This is a comment', "''' This is a comment '''", '/* This is a comment */', '/* This is a comment */'),
    # ('What is the output of the following code? \nprint(2 + 3 * 4)', '14', '20', '24', '15', '14'),
    ]

    shuffle(questions)

    # Insert each question into the database
    for q in questions:
        cursor.execute("INSERT INTO QUESTIONBANK (QUESTION, OP1, OP2, OP3, OP4, ANS) VALUES (?, ?, ?, ?, ?, ?)", q)
        connection.commit()
        # cursor.execute("INSERT INTO REGISTER (NAME, ENROLL, CONTACT, MAIL, PASS, SCORE) VALUES (%s, %s, %s, %s, %s, %s)", (q[0],q[1],q[2],q[3],q[4],q[5]))
        connection.commit()
        

try:
    cursor = connection.cursor()
    cursor.execute("CREATE TABLE IF NOT EXISTS QUESTIONBANK (QUESTION TEXT,OP1 TEXT,OP2 TEXT, OP3 TEXT,OP4 TEXT,ANS TEXT)")
    # connection.commit()
    # cursor.execute("SELECT * FROM QUESTIONBANK  ORDER BY RANDOM() LIMIT 10")
    # QUE=cursor.fetchall()
    # print(QUE)
    # Call the function to insert questions
    insert_questions()
    
    print("Questions inserted successfully.")
except Exception as e:
    print("Error while connecting",e)
